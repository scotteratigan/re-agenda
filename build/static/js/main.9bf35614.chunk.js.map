{"version":3,"sources":["images/left_chevron.svg","images/right_chevron.svg","images/fabian-mardi-kVKz9qnJC-k-unsplash.jpg","images/ian-matyssik--G3ouskaEKo-unsplash.jpg","images/anthony-delanoix-urUdKCxsTUI-unsplash.jpg","images/vishal-bhutani-ugyfweYokVA-unsplash.jpg","images/corina-ardeleanu-sWlxCweDzzs-unsplash.jpg","images/florian-giorgio-8X19catOuNI-unsplash.jpg","images/jacqueline-o-gara-kS4HtDY66Tg-unsplash.jpg","images/mitchell-kmetz-ycGndhqg_QQ-unsplash.jpg","images/ben-rosett-nYugmV-SY6s-unsplash.jpg","images/flash-alexander-SDS53BJhAwc-unsplash.jpg","images/emma-francis-qNnd-DcoFGg-unsplash.jpg","images/wil-stewart-zlg4ExVKgAU-unsplash.jpg","Components/YearPicker.jsx","Components/MonthPicker.jsx","Components/ChangeMonthBtn.jsx","Components/DatePickerRow.jsx","Components/Event.jsx","Components/DisplayDay.jsx","Components/DaysHeader.jsx","Components/DisplayMonth.jsx","Components/CalendarHeader.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","YearPicker","_ref","selectedYear","setSelectedYear","yearList","react_default","a","createElement","value","onChange","e","target","map","year","key","MonthPicker","selectedMonth","selectedMonthIndex","changeSelectedMonth","monthList","parseInt","month","i","ChangeMonthBtn","monthDelta","type","onClick","class","src","leftChevron","alt","style","height","rightChevron","DatePickerRow","textAlign","margin","Event","event","_useState","useState","_useState2","Object","slicedToArray","hovered","setHovered","name","description","federalHoliday","onMouseEnter","console","log","onMouseLeave","backgroundColor","border","borderRadius","display","zIndex","width","transition","fontSize","color","DisplayDay","date","events","row","column","isToday","gridRowStart","gridColumnStart","className","uuid","DaysHeader","Fragment","DisplayDayOfWeek","dayNum","day","DisplayMonth","displayMonth","displayYear","firstDayStr","concat","displayStartMoment","moment","startDayNum","daysInMonth","dateArr","Array","apply","forEach","elm","monthEvents","currMoment","isCurrYear","isCurrMonth","gridGap","Math","ceil","eventsToday","CalendarHeader","padding","clipPath","App","currentYear","length","generateYearList","backgroundList","januaryImg","februaryImg","marchImg","aprilImg","mayImg","juneImg","julyImg","augustImg","septemberImg","octoberImg","novemberImg","decemberImg","setSelectedMonthIndex","_useState3","_useState4","_useState5","_useState6","backgroundImg","setBackgroundImg","useEffect","setTimeout","alignItems","justifyContent","backgroundImage","backgroundRepeat","backgroundSize","newMonthIndex","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9bf35614.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/left_chevron.c0e9a838.svg\";","module.exports = __webpack_public_path__ + \"static/media/right_chevron.b79ac830.svg\";","module.exports = __webpack_public_path__ + \"static/media/fabian-mardi-kVKz9qnJC-k-unsplash.097fd625.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ian-matyssik--G3ouskaEKo-unsplash.f01eea01.jpg\";","module.exports = __webpack_public_path__ + \"static/media/anthony-delanoix-urUdKCxsTUI-unsplash.40747251.jpg\";","module.exports = __webpack_public_path__ + \"static/media/vishal-bhutani-ugyfweYokVA-unsplash.e5ab9347.jpg\";","module.exports = __webpack_public_path__ + \"static/media/corina-ardeleanu-sWlxCweDzzs-unsplash.30217d32.jpg\";","module.exports = __webpack_public_path__ + \"static/media/florian-giorgio-8X19catOuNI-unsplash.bee79f16.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jacqueline-o-gara-kS4HtDY66Tg-unsplash.f2a6dc2c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mitchell-kmetz-ycGndhqg_QQ-unsplash.b1ffcdff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ben-rosett-nYugmV-SY6s-unsplash.0c991b42.jpg\";","module.exports = __webpack_public_path__ + \"static/media/flash-alexander-SDS53BJhAwc-unsplash.8a53ebe9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/emma-francis-qNnd-DcoFGg-unsplash.66ba2f53.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wil-stewart-zlg4ExVKgAU-unsplash.fddef92f.jpg\";","import React from \"react\";\n\n// const YEAR_LIST = [2015, 2016, 2017, 2018, 2019, 2020, 2021];\n// todo: generate dynamically based on current year\n\nexport default function YearPicker({\n  selectedYear,\n  setSelectedYear,\n  yearList\n}) {\n  return (\n    <select\n      value={selectedYear}\n      onChange={e => setSelectedYear(e.target.value)}\n    >\n      {yearList.map(year => (\n        <option value={year} key={year}>\n          {year}\n        </option>\n      ))}\n    </select>\n  );\n}\n","import React from \"react\";\n\nexport default function MonthPicker({\n  selectedMonth,\n  // setSelectedMonth,\n  selectedMonthIndex,\n  changeSelectedMonth,\n  monthList\n}) {\n  return (\n    <select\n      value={selectedMonthIndex}\n      onChange={e => changeSelectedMonth(parseInt(e.target.value))}\n    >\n      {monthList.map((month, i) => (\n        <option value={i} key={month}>\n          {month}\n        </option>\n      ))}\n    </select>\n  );\n}\n","import React from \"react\";\nimport leftChevron from \"../images/left_chevron.svg\";\nimport rightChevron from \"../images/right_chevron.svg\";\n\nexport default function ChangeMonthBtn({\n  selectedYear,\n  selectedMonthIndex,\n  setSelectedYear,\n  monthDelta, // direction of change, -1 for prev month, 1 for next month\n  changeSelectedMonth\n}) {\n  function handleClick() {\n    if (monthDelta === -1) {\n      // subtract 1 from month:\n      if (selectedMonthIndex > 0) {\n        changeSelectedMonth(selectedMonthIndex - 1);\n      } else {\n        changeSelectedMonth(11);\n        setSelectedYear(selectedYear - 1);\n      }\n    } else {\n      // add 1 to month:\n      if (selectedMonthIndex < 11) {\n        changeSelectedMonth(selectedMonthIndex + 1);\n      } else {\n        changeSelectedMonth(0);\n        setSelectedYear(selectedYear + 1);\n      }\n    }\n  }\n\n  return (\n    <button type={\"button\"} onClick={handleClick} class=\"btn-chevron\">\n      {monthDelta === -1 ? (\n        <img src={leftChevron} alt=\"<\" style={{ height: \".6rem\" }} />\n      ) : (\n        <img src={rightChevron} alt=\">\" style={{ height: \".6rem\" }} />\n      )}\n    </button>\n  );\n}\n","import React from \"react\";\nimport YearPicker from \"./YearPicker\";\nimport MonthPicker from \"./MonthPicker\";\nimport ChangeMonthBtn from \"./ChangeMonthBtn\";\n\nexport default function DatePickerRow({\n  selectedYear,\n  setSelectedYear,\n  monthList,\n  yearList,\n  selectedMonthIndex,\n  changeSelectedMonth\n}) {\n  return (\n    <div style={{ textAlign: \"center\", margin: 20 }}>\n      <ChangeMonthBtn\n        selectedYear={selectedYear}\n        selectedMonthIndex={selectedMonthIndex}\n        setSelectedYear={setSelectedYear}\n        changeSelectedMonth={changeSelectedMonth}\n        monthDelta={-1}\n      />\n      <MonthPicker\n        // selectedMonth={selectedMonth}\n        // setSelectedMonth={setSelectedMonth}\n        selectedMonthIndex={selectedMonthIndex}\n        changeSelectedMonth={changeSelectedMonth}\n        monthList={monthList}\n      />\n      <YearPicker\n        selectedYear={selectedYear}\n        setSelectedYear={setSelectedYear}\n        yearList={yearList}\n      />\n      <ChangeMonthBtn\n        selectedYear={selectedYear}\n        selectedMonthIndex={selectedMonthIndex}\n        setSelectedYear={setSelectedYear}\n        changeSelectedMonth={changeSelectedMonth}\n        monthDelta={1}\n      />\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport default function Event({ event }) {\n  function hoverStart() {\n    console.log(\"hovering\");\n    setHovered(true);\n  }\n  function hoverEnd() {\n    console.log(\"not hovering\");\n    setHovered(false);\n  }\n  const [hovered, setHovered] = useState(false);\n  const { name, description, federalHoliday } = event;\n  return (\n    <div\n      onMouseEnter={hoverStart}\n      onMouseLeave={hoverEnd}\n      style={\n        hovered\n          ? {\n              backgroundColor: \"white\",\n              border: \"1px solid black\",\n              borderRadius: 5,\n              display: \"absolute\",\n              zIndex: 3,\n              width: \"200%\",\n              // height: \"200%\",\n              transition: \"all 0.3s\"\n            }\n          : federalHoliday\n          ? {\n              fontSize: \"0.8rem\",\n              color: \"white\",\n              backgroundColor: \"blue\"\n            }\n          : { fontSize: \"0.8rem\" }\n      }\n    >\n      {hovered ? (\n        <div>\n          <div\n            style={{ color: \"white\", backgroundColor: \"rgba(0, 0, 0, 0.8)\" }}\n          >\n            {name}\n          </div>\n          <div style={{ fontSize: \"0.7rem\" }}>{description}</div>\n        </div>\n      ) : (\n        <div>{name}</div>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\n\n// Components\nimport Event from \"./Event\";\n\nexport default function DisplayDay({ date, events, row, column, isToday }) {\n  console.log(\"isToday:\", isToday);\n  return (\n    <div\n      style={{\n        width: 100,\n        height: 100,\n        border: \"1px solid black\",\n        borderRadius: 5,\n        display: \"inline-grid\",\n        gridRowStart: row,\n        gridColumnStart: column\n        // backgroundColor: isToday ? \"rgba(196, 215, 245, 0.8)\" : \"none\" WHAT IN TARNATION IS GOING ON HERE?!?!\n      }}\n      className={isToday ? \"today-day\" : \"\"}\n    >\n      <div className={\"date-number\"}>{date}:</div>\n      {events &&\n        events.map(event => {\n          const { uuid } = event;\n          return <Event key={uuid} event={event} />;\n        })}\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function DaysHeader() {\n  return (\n    <>\n      <DisplayDayOfWeek dayNum={0} />\n      <DisplayDayOfWeek dayNum={1} />\n      <DisplayDayOfWeek dayNum={2} />\n      <DisplayDayOfWeek dayNum={3} />\n      <DisplayDayOfWeek dayNum={4} />\n      <DisplayDayOfWeek dayNum={5} />\n      <DisplayDayOfWeek dayNum={6} />\n    </>\n  );\n}\n\nfunction DisplayDayOfWeek({ dayNum }) {\n  // Top row of calendar, display days of week\n  const daysOfWeek = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n    \"Sunday\"\n  ];\n  const day = daysOfWeek[dayNum];\n  return (\n    <div\n      style={{\n        width: 100,\n        height: 25,\n        display: \"inline-grid\",\n        gridRowStart: 1,\n        gridColumnStart: dayNum + 1,\n        textAlign: \"center\"\n      }}\n    >\n      {day}\n    </div>\n  );\n}\n","import React from \"react\";\nimport moment from \"moment\";\n\nimport DisplayDay from \"./DisplayDay\";\nimport DaysHeader from \"./DaysHeader\";\nimport events from \"../events.json\";\n\nexport default function DisplayMonth({ displayMonth, displayYear }) {\n  const firstDayStr = `${displayYear}/${displayMonth}/1`;\n  const displayStartMoment = moment(firstDayStr, \"YYYY/M/D\"); // creating string 2019/August/1 for instance (using Date obj is depreciated in MomentJS)\n  const startDayNum = displayStartMoment.day(); // Sunday is 0, Monday is 1\n  const daysInMonth = displayStartMoment.daysInMonth();\n  const dateArr = Array.apply(null, Array(daysInMonth));\n  dateArr.forEach((elm, i) => (dateArr[i] = i + 1));\n  const yearEvents = events[displayYear] || [];\n  const monthEvents = yearEvents[displayMonth] || [];\n  const currMoment = moment();\n  const isCurrYear = moment().year() === parseInt(displayYear);\n  const isCurrMonth = currMoment.month() + 1 === parseInt(displayMonth);\n  return (\n    <div style={{ display: \"grid\", gridGap: 1 }}>\n      <DaysHeader />\n      {dateArr.map((dayNum, i) => {\n        const column = ((i + startDayNum) % 7) + 1;\n        const row = Math.ceil((dayNum + startDayNum) / 7) + 1;\n        const eventsToday = monthEvents[dayNum] || [];\n        const isToday =\n          isCurrYear && isCurrMonth && dayNum === currMoment.date();\n        return (\n          <DisplayDay\n            date={dayNum}\n            column={column}\n            row={row}\n            events={eventsToday}\n            key={dayNum}\n            isToday={isToday}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function CalendarHeader() {\n  return (\n    <h1\n      style={{\n        textAlign: \"center\",\n        backgroundColor: \"rgba(0, 0, 0, 0.6)\",\n        color: \"white\",\n        margin: \"0 -15px\",\n        padding: \"15px 0\",\n        // clipPath: \"polygon(0% 30%, 100% 0%, 100% 70%, 0% 100%)\"\n        // clipPath: \"polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%)\"\n        clipPath: \"polygon(0 0, 95% 0%, 80% 100%, 0% 100%)\"\n      }}\n    >\n      Calendar\n    </h1>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\n\n// Components:\n// import YearPicker from \"./Components/YearPicker\";\n// import MonthPicker from \"./Components/MonthPicker\";\n// import ChangeMonthBtn from \"./Components/ChangeMonthBtn\";\nimport DatePickerRow from \"./Components/DatePickerRow\";\nimport DisplayMonth from \"./Components/DisplayMonth\";\nimport CalendarHeader from \"./Components/CalendarHeader\";\n\n// Background Images:\nimport januaryImg from \"./images/fabian-mardi-kVKz9qnJC-k-unsplash.jpg\";\nimport februaryImg from \"./images/ian-matyssik--G3ouskaEKo-unsplash.jpg\";\nimport marchImg from \"./images/anthony-delanoix-urUdKCxsTUI-unsplash.jpg\";\nimport aprilImg from \"./images/vishal-bhutani-ugyfweYokVA-unsplash.jpg\";\nimport mayImg from \"./images/corina-ardeleanu-sWlxCweDzzs-unsplash.jpg\";\nimport juneImg from \"./images/florian-giorgio-8X19catOuNI-unsplash.jpg\";\nimport julyImg from \"./images/jacqueline-o-gara-kS4HtDY66Tg-unsplash.jpg\";\nimport augustImg from \"./images/mitchell-kmetz-ycGndhqg_QQ-unsplash.jpg\";\nimport septemberImg from \"./images/ben-rosett-nYugmV-SY6s-unsplash.jpg\";\nimport octoberImg from \"./images/flash-alexander-SDS53BJhAwc-unsplash.jpg\";\nimport novemberImg from \"./images/emma-francis-qNnd-DcoFGg-unsplash.jpg\";\nimport decemberImg from \"./images/wil-stewart-zlg4ExVKgAU-unsplash.jpg\";\n\nfunction App() {\n  const currentYear = moment().year();\n  const yearList = generateYearList(currentYear);\n  const monthList = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ];\n  const backgroundList = [\n    januaryImg,\n    februaryImg,\n    marchImg,\n    aprilImg,\n    mayImg,\n    juneImg,\n    julyImg,\n    augustImg,\n    septemberImg,\n    octoberImg,\n    novemberImg,\n    decemberImg\n  ];\n  // const [selectedMonth, setSelectedMonth] = useState(\n  //   monthList[moment().month()]\n  // );\n  const [selectedMonthIndex, setSelectedMonthIndex] = useState(\n    moment().month()\n  );\n  const [selectedYear, setSelectedYear] = useState(currentYear);\n  const [backgroundImg, setBackgroundImg] = useState(null);\n  function changeSelectedMonth(newMonthIndex) {\n    setSelectedMonthIndex(newMonthIndex);\n  }\n  useEffect(() => {\n    setTimeout(() => {\n      setBackgroundImg(backgroundList[selectedMonthIndex]);\n    }, 0);\n  }, [backgroundList, selectedMonthIndex]);\n  return (\n    <div\n      className=\"App\"\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"100vw\",\n        height: \"100vh\",\n        backgroundImage: `url(${backgroundImg})`,\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\",\n        transition: \"background-image 1.2s ease-in-out\"\n      }}\n    >\n      <div\n        style={{\n          backgroundColor: \"rgba(255, 255, 255, 0.8\",\n          padding: 15,\n          borderRadius: 10\n        }}\n      >\n        <CalendarHeader />\n        <DatePickerRow\n          selectedYear={selectedYear}\n          setSelectedYear={setSelectedYear}\n          monthList={monthList}\n          yearList={yearList}\n          selectedMonthIndex={selectedMonthIndex}\n          changeSelectedMonth={changeSelectedMonth}\n        />\n        <DisplayMonth\n          displayMonth={selectedMonthIndex + 1}\n          monthList={monthList}\n          displayYear={selectedYear}\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction generateYearList(currentYear) {\n  // returns an array of Numbers, from current year - 10 through current year + 10, given the current year as an Integer\n  const yearList = new Array(21);\n  for (let i = 0; i < yearList.length; i++) {\n    yearList[i] = currentYear - 10 + i;\n  }\n  return yearList;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}